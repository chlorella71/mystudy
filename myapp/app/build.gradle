plugins {
//    id 'application'
    id 'java'
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'bitcamp'
version = '0.0.1-SNAPSHOT'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.2'

    compileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'com.mysql:mysql-connector-j'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'

    // AWS S3 API 라이브러리
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.688'
    
    // VO 객체와 DAO 인터페이스
//    implementation project(':app-common')

    // MySQL JDBC Driver
    implementation 'com.mysql:mysql-connector-j:8.3.0'

    // DAO Stub 객체
//    implementation project(':app-api')

    // JSON 라이브러리
//    implementation 'com.google.code.gson:gson:2.10.1'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'com.google.guava:guava:32.1.1-jre'

    // 임베디드 Tomcat 서버
//    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:9.0.85'

    // JSTL 라이브러리
    implementation 'javax.servlet:jstl:1.2'

    // Spring IoC 컨테이너
//    implementation 'org.springframework:spring-context:5.3.32'

    // Spring WebMVC 라이브러리
//    implementation 'org.springframework:spring-webmvc:5.3.32'

    // Spring JDBC 라이브러리
    implementation 'org.springframework:spring-jdbc:5.3.32'

    // log4j 2.x 라이브러리
//    implementation 'org.apache.logging.log4j:log4j-core:2.23.1'

    // Mybatis 라이브러리
//    implementation 'org.mybatis:mybatis:3.5.15'

    // Mybatis를 Spring 프레임워크와 더 쉽게 연동하고자 할 때 사용하는 라이브러리
    // (=> Mybatis 3.를 Spring 5.x와 연동시켜주는 라이브러리
//    implementation 'org.mybatis:mybatis-spring:2.1.2'
    // Mybatis 3.5를 Spring 6.0.x와 연동시켜주는 라이브러리
//    implementation 'org.mybatis:mybatis-spring:3.0.3'

    // Thymeleaf 라이브러리
//    implementation 'org.thymeleaf:thymeleaf-spring5:3.1.2.RELEASE'

    // Lombok 라이브러리
//    implementation 'org.projectlombok:lombok:1.18.32'

    // Lombok 라이브러리
    // => 컴파일 할 때만 이 라이브러리를 사용한다.
    //    컴파일이 완료된 후에는 이 라이브러리가 필요없다.
    //    따라서 배포 파일에는 포함시키지않는다.
    compileOnly 'org.projectlombok:lombok:1.18.32'

    // => lombok 애노테이션을 처리할 라이브러리를 지정한다.
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    // => 단위 테스트 소스를 컴파일 할 때만 사용한다.
    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    // => 단위 테스트 소스에 삽입된 lombok 애노테이션을 처리할 라이브러리를 지정한다.
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'

}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

//application {
//    mainClass = 'bitcamp.myapp.App'
//}

//tasks.named('test') {
//    useJUnitPlatform()
//}

// 자바 소스를 컴파일 할 때 적용할 옵션(Gradle 로 컴파일 할 때)
tasks.withType(JavaCompile).configureEach {
    // 프로젝트의 소스 파일 인코딩을 gradle에게 알려준다.
    // $javac -encoding UTF-8 ..
    options.encoding = 'UTF-8'
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}
//run {
//    standardInput = System.in
//}